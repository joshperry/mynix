# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ "xhci_pci" "ahci" "nvme" "usbhid" "sd_mod" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-intel" ];
  boot.extraModulePackages = [ ];

  fileSystems."/" =
    { device = "/dev/disk/by-uuid/eb2dcba7-507d-42df-8311-4ba04ad3e541";
      fsType = "btrfs";
      options = [ "subvol=@" ];
    };

  fileSystems."/var/log" =
    { device = "/dev/disk/by-uuid/eb2dcba7-507d-42df-8311-4ba04ad3e541";
      fsType = "btrfs";
      options = [ "subvol=@log" ];
    };

  fileSystems."/home" =
    { device = "/dev/disk/by-uuid/eb2dcba7-507d-42df-8311-4ba04ad3e541";
      fsType = "btrfs";
      options = [ "subvol=@home" ];
    };

  fileSystems."/srv" =
    { device = "/dev/disk/by-uuid/eb2dcba7-507d-42df-8311-4ba04ad3e541";
      fsType = "btrfs";
      options = [ "subvol=@srv" ];
    };

  fileSystems."/var/tmp" =
    { device = "/dev/disk/by-uuid/eb2dcba7-507d-42df-8311-4ba04ad3e541";
      fsType = "btrfs";
      options = [ "subvol=@tmp" ];
    };

  fileSystems."/var/cache" =
    { device = "/dev/disk/by-uuid/eb2dcba7-507d-42df-8311-4ba04ad3e541";
      fsType = "btrfs";
      options = [ "subvol=@cache" ];
    };

  fileSystems."/root" =
    { device = "/dev/disk/by-uuid/eb2dcba7-507d-42df-8311-4ba04ad3e541";
      fsType = "btrfs";
      options = [ "subvol=@root" ];
    };

  fileSystems."/boot" =
    { device = "/dev/disk/by-uuid/D519-A9E5";
      fsType = "vfat";
    };

  fileSystems."/mnt/kago" =
    { device = "//kago.local/media";
      fsType = "cifs";
      options = [ "credentials=/etc/nixos/kago-secrets" "uid=1000" "gid=1000" "file_mode=0664" "dir_mode=0775" ];
    };

  fileSystems."/mnt/sub" =
    { device = "/dev/disk/by-uuid/eb2dcba7-507d-42df-8311-4ba04ad3e541";
      fsType = "btrfs";
    };

  fileSystems."/mnt/c" =
    { device = "/dev/disk/by-uuid/0A8CFD018CFCE859";
      fsType = "ntfs3";
      options = [ "uid=1000" "gid=1000" "fmask=0177" "dmask=0077" ];
    };

  fileSystems."/mnt/bu" =
    { device = "/dev/disk/by-uuid/88F0B74CF0B73F6E";
      fsType = "ntfs3";
      options = [ "uid=1000" "gid=1000" "fmask=0177" "dmask=0077" ];
    };

  fileSystems."/mnt/deuce" =
    { device = "/dev/disk/by-uuid/EE48CF1648CEDC89";
      fsType = "ntfs3";
      options = [ "uid=1000" "gid=1000" "fmask=0177" "dmask=0077" ];
    };

  fileSystems."/mnt/massflash" =
    { device = "/dev/disk/by-uuid/4A18E92218E90E2F";
      fsType = "ntfs3";
      options = [ "uid=1000" "gid=1000" "fmask=0177" "dmask=0077" ];
    };

  fileSystems."/mnt/guiltyspark" =
    { device = "/dev/disk/by-uuid/c5131001-51c7-4424-8a79-74f3b12b9853";
      fsType = "btrfs";
    };

  swapDevices = [ ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp0s31f6.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  powerManagement.cpuFreqGovernor = lib.mkDefault "performance";
  hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
